{"version":3,"sources":["store.js","constants.js","useStyles.js","components/Form/Form.js","actionCreators.js","StyledTableCell.js","components/Product/Product.jsx","components/ProductList/ProductList.jsx","App.js","index.js"],"names":["initialState","products","store","createStore","state","action","type","filter","product","id","find","concat","useStyles","makeStyles","theme","root","flexGrow","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","spacing","inputRoot","color","inputInput","padding","paddingLeft","transition","transitions","create","connect","dispatch","onAddProduct","addProduct","useState","image","setImage","name","setName","description","setDescription","price","setPrice","onSubmit","event","preventDefault","uuid","className","TextField","label","variant","value","onChange","target","required","Number","Button","StyledTableCell","withStyles","head","black","body","fontSize","TableCell","StyledTableRow","background","default","TableRow","mapDispatchToProps","onRemoveProduct","onPinProduct","component","scope","align","src","alt","onClick","table","minWidth","props","classes","TableContainer","Paper","Table","aria-label","TableHead","TableBody","map","key","query","setQuery","filtredProducts","toLowerCase","includes","AppBar","Toolbar","Typography","noWrap","searchItem","InputBase","placeholder","input","inputProps","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0217b194.chunk.js","sourcesContent":["import { createStore } from 'redux';\nimport {\n  REMOVE_PRODUCT,\n  ADD_PRODUCT,\n  PIN_PRODUCT,\n} from './constants';\n\nconst initialState = {\n  products: [],\n};\n\nconst reduser = (state = initialState, action) => {\n  switch (action.type) {\n    case REMOVE_PRODUCT:\n      return {\n        products: [...state.products].filter(\n          product => product.id !== action.id,\n        ),\n      };\n    case ADD_PRODUCT:\n      return {\n        products: [\n          ...state.products,\n          action.product,\n        ],\n      };\n    case PIN_PRODUCT:\n      return {\n        products: [[...state.products].find(\n          product => product.id === action.id,\n        )].concat([...state.products].filter(\n          product => product.id !== action.id,\n        )),\n      };\n    default:\n      return state;\n  }\n};\n\nexport const store = createStore(reduser);\n","export const REMOVE_PRODUCT = 'REMOVE_PRODUCT';\nexport const ADD_PRODUCT = 'ADD_PRODUCT';\nexport const PIN_PRODUCT = 'PIN_PRODUCT';\n","import { fade, makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n}));\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport uuid from 'react-uuid';\nimport PropTypes from 'prop-types';\nimport { addProduct } from '../../actionCreators';\nimport './Form.css';\n\nconst Form = ({ onAddProduct }) => {\n  const [image, setImage] = useState('');\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [price, setPrice] = useState('');\n\n  const handleInputProductImage = ({ target }) => {\n    const { value } = target;\n\n    setImage(value);\n  };\n\n  const handleInputProductName = ({ target }) => {\n    const { value } = target;\n\n    setName(value);\n  };\n\n  const handleInputProductDescription = ({ target }) => {\n    const { value } = target;\n\n    setDescription(value);\n  };\n\n  const handleInputProductPrice = ({ target }) => {\n    const { value } = target;\n\n    if (Number(value)) {\n      setPrice(Number(value));\n    }\n  };\n\n  const handleAddProduct = (event) => {\n    event.preventDefault();\n    onAddProduct({\n      id: uuid(),\n      image,\n      name,\n      description,\n      price,\n    });\n    setImage('');\n    setName('');\n    setDescription('');\n    setPrice('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleAddProduct} className=\"form\">\n        <TextField\n          label=\"URL of image\"\n          variant=\"outlined\"\n          className=\"input\"\n          value={image}\n          onChange={handleInputProductImage}\n        />\n        <TextField\n          required\n          label=\"Name\"\n          variant=\"outlined\"\n          className=\"input\"\n          value={name}\n          onChange={handleInputProductName}\n        />\n        <TextField\n          required\n          label=\"Description\"\n          variant=\"outlined\"\n          className=\"input\"\n          value={description}\n          onChange={handleInputProductDescription}\n        />\n        <TextField\n          required\n          label=\"Price\"\n          variant=\"outlined\"\n          className=\"input\"\n          value={price}\n          onChange={handleInputProductPrice}\n        />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className=\"button\"\n        >\n          Add product\n        </Button>\n      </form>\n    </>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onAddProduct: product => dispatch(addProduct(product)),\n});\n\nexport default connect(null, mapDispatchToProps)(Form);\n\nForm.propTypes = {\n  onAddProduct: PropTypes.func.isRequired,\n};\n","import {\n  REMOVE_PRODUCT,\n  ADD_PRODUCT,\n  PIN_PRODUCT,\n} from './constants';\n\nexport const removeProduct = value => ({\n  type: REMOVE_PRODUCT,\n  id: value,\n});\n\nexport const addProduct = product => ({\n  type: ADD_PRODUCT,\n  product,\n});\n\nexport const pinProduct = value => ({\n  type: PIN_PRODUCT,\n  id: value,\n});\n","import { withStyles } from '@material-ui/core/styles';\nimport TableCell from '@material-ui/core/TableCell';\n\nexport const StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport TableRow from '@material-ui/core/TableRow';\nimport PropTypes from 'prop-types';\nimport { StyledTableCell } from '../../StyledTableCell';\nimport { removeProduct, pinProduct } from '../../actionCreators';\nimport './Product.css';\n\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n}))(TableRow);\n\nconst Product = ({\n  product,\n  onRemoveProduct,\n  onPinProduct,\n}) => (\n  <StyledTableRow>\n    <StyledTableCell\n      component=\"th\"\n      scope=\"row\"\n      align=\"center\"\n    >\n      <img\n        src={product.image}\n        alt={product.name}\n        className=\"image\"\n      />\n    </StyledTableCell>\n    <StyledTableCell align=\"center\">\n      <button\n        type=\"button\"\n        className=\"product__button product__button-remove\"\n        onClick={() => onPinProduct(product.id)}\n      >\n        {product.name}\n      </button>\n    </StyledTableCell>\n    <StyledTableCell align=\"left\">{product.description}</StyledTableCell>\n    <StyledTableCell align=\"center\">{product.price}</StyledTableCell>\n    <StyledTableCell align=\"center\">\n      <button\n        type=\"button\"\n        className=\"product__button product__button-remove\"\n        onClick={() => onRemoveProduct(product.id)}\n      >\n          Remove\n      </button>\n    </StyledTableCell>\n  </StyledTableRow>\n);\n\nconst mapDispatchToProps = ({\n  onRemoveProduct: removeProduct,\n  onPinProduct: pinProduct,\n});\n\nexport default connect(null, mapDispatchToProps)(Product);\n\nProduct.propTypes = {\n  product: PropTypes.shape({\n    image: PropTypes.string,\n    name: PropTypes.string,\n    id: PropTypes.string,\n    description: PropTypes.string,\n    price: PropTypes.number,\n  }).isRequired,\n  onRemoveProduct: PropTypes.func.isRequired,\n  onPinProduct: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport { StyledTableCell } from '../../StyledTableCell';\nimport Product from '../Product/Product';\nimport './ProductList.css';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nconst ProductList = (props) => {\n  const { products } = props;\n  const classes = useStyles();\n\n  return (\n    <div className=\"table\">\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"customized table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell align=\"center\">Image</StyledTableCell>\n              <StyledTableCell align=\"center\">Name</StyledTableCell>\n              <StyledTableCell align=\"left\">Description</StyledTableCell>\n              <StyledTableCell align=\"center\">Price</StyledTableCell>\n              <StyledTableCell align=\"center\" />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {products.map(product => (\n              <Product\n                product={product}\n                key={product.id}\n              />\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default connect()(ProductList);\n\nProductList.propTypes = {\n  products: PropTypes.arrayOf(\n    PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      id: PropTypes.string,\n      description: PropTypes.string,\n      price: PropTypes.number,\n    }),\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport PropTypes from 'prop-types';\nimport { useStyles } from './useStyles';\nimport Form from './components/Form/Form';\nimport ProductList from './components/ProductList/ProductList';\nimport './App.css';\n\nconst App = ({ products }) => {\n  const [query, setQuery] = useState('');\n  const classes = useStyles();\n\n  const filterQuery = (event) => {\n    const searchItem = event.target.value;\n\n    setQuery(searchItem);\n  };\n\n  const filtredProducts = products.filter(\n    product => product.name.toLowerCase().includes(query.toLowerCase())\n      || product.description.toLowerCase().includes(query.toLowerCase()),\n  );\n\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            List of products\n          </Typography>\n          <div\n            className={classes.search}\n            value={query}\n            onChange={filterQuery}\n          >\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n      <div className=\"app\">\n        <Form />\n        {\n          products.length\n            ? (\n              <>\n                <p className=\"text\">\n                  To pin a product, click on the product name\n                </p>\n                <ProductList\n                  products={filtredProducts}\n                />\n              </>\n            )\n            : (\n              <p className=\"text\">No products</p>\n            )\n        }\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  products: state.products,\n});\n\nexport default connect(mapStateToProps)(App);\n\nApp.propTypes = {\n  products: PropTypes.arrayOf(\n    PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      id: PropTypes.string,\n      description: PropTypes.string,\n      price: PropTypes.number,\n    }),\n  ).isRequired,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}